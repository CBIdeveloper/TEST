/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as e from "react";
import t from "prop-types";
import { validatePackage as x, classNames as C, uAnimation as N, UnstyledContext as R } from "@progress/kendo-react-common";
import { AnimationChild as g } from "./AnimationChild.mjs";
import { TransitionGroup as q } from "react-transition-group";
import { packageMetadata as b } from "./package-metadata.mjs";
const o = class o extends e.Component {
  constructor(n) {
    super(n), x(b);
  }
  /**
   * @hidden
   */
  render() {
    const {
      id: n,
      style: i,
      children: s,
      component: a,
      className: c,
      childFactory: l,
      stackChildren: T,
      componentChildStyle: m,
      componentChildClassName: p,
      ...d
    } = this.props, u = this.context && this.context.uAnimation, h = {
      id: n,
      style: i,
      component: a,
      childFactory: l,
      className: C(N.child({ c: u }), c)
    }, y = e.Children.map(s || null, (f) => /* @__PURE__ */ e.createElement(
      g,
      {
        ...d,
        style: m,
        className: p
      },
      f
    ));
    return /* @__PURE__ */ e.createElement(q, { ...h }, y);
  }
};
o.propTypes = {
  children: t.oneOfType([
    t.arrayOf(t.node),
    t.node
  ]),
  childFactory: t.any,
  className: t.string,
  component: t.string,
  id: t.string,
  style: t.any,
  transitionName: t.string.isRequired,
  appear: t.bool.isRequired,
  enter: t.bool.isRequired,
  exit: t.bool.isRequired,
  transitionEnterDuration: t.number.isRequired,
  transitionExitDuration: t.number.isRequired
}, o.defaultProps = {
  component: "div"
};
let r = o;
r.contextType = R;
export {
  r as Animation
};
