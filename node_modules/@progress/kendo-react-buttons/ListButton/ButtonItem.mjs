/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import { useUnstyled as s, classNames as i, uDropDownButton as c, IconWrap as u } from "@progress/kendo-react-common";
const x = (e) => {
  const a = s(), n = a && a.uDropDownButton, I = t.useCallback(
    (o) => {
      e.onClick(o, e.index);
    },
    [e]
  ), d = e.dataItem.render || e.item || (e.item === void 0 ? e.render : null), m = e.dataItem.text !== void 0 ? e.dataItem.text : e.textField ? e.dataItem[e.textField] : e.dataItem, l = /* @__PURE__ */ t.createElement(
    "li",
    {
      id: e.id,
      className: i(c.li({
        c: n,
        focused: e.focused
      }), e.className),
      tabIndex: -1,
      onClick: I,
      onMouseDown: e.onDown,
      onPointerDown: e.onDown,
      role: "menuitem",
      "aria-disabled": e.dataItem.disabled || void 0
    },
    /* @__PURE__ */ t.createElement(
      "span",
      {
        tabIndex: -1,
        className: i(c.link({
          c: n,
          selected: e.dataItem.selected,
          disabled: e.dataItem.disabled
        })),
        key: "icon"
      },
      d ? /* @__PURE__ */ t.createElement(d, { item: e.dataItem, itemIndex: e.index }) : /* @__PURE__ */ t.createElement(t.Fragment, null, (e.dataItem.icon || e.dataItem.iconClass || e.dataItem.svgIcon) && /* @__PURE__ */ t.createElement(u, { className: e.dataItem.iconClass, name: e.dataItem.icon, icon: e.dataItem.svgIcon }), e.dataItem.imageUrl && /* @__PURE__ */ t.createElement(
        "img",
        {
          role: "presentation",
          alt: "",
          src: e.dataItem.imageUrl,
          className: "k-icon"
        }
      ), m && /* @__PURE__ */ t.createElement("span", { className: "k-menu-link-text" }, m))
    )
  );
  return e.item !== void 0 && /* to be removed in 5.0.0 */
  e.render !== void 0 ? e.render.call(void 0, l, e) : l;
};
x.displayName = "KendoReactButtonItem";
export {
  x as ButtonItem
};
