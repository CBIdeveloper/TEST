/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const I=require("react"),l=require("prop-types"),t=require("@progress/kendo-react-common"),M=require("./package-metadata.js");function x(o){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(o){for(const s in o)if(s!=="default"){const n=Object.getOwnPropertyDescriptor(o,s);Object.defineProperty(e,s,n.get?n:{enumerable:!0,get:()=>o[s]})}}return e.default=o,Object.freeze(e)}const c=x(I);function B({imageUrl:o,name:e,iconClass:s,svgIcon:n,imageAlt:r,buttonClasses:a}){return o?c.createElement("img",{role:"presentation",className:t.classNames(t.uButton.icon({c:a})),alt:r,src:o}):e||n?c.createElement(t.IconWrap,{className:t.classNames(t.uButton.icon({c:a})),name:e,icon:n}):s?c.createElement("span",{role:"presentation",className:t.classNames(t.uButton.icon({c:a}),s)}):null}const i=class i extends c.Component{constructor(e){super(e),this._element=null,this.handleClick=s=>{this.toggleIfApplicable(),this.props.onClick&&this.props.onClick.call(void 0,s)},t.validatePackage(M.packageMetadata),this.state={selected:this.props.togglable===!0&&this.props.selected===!0}}get element(){return this._element}get selected(){return this._selectedTemp!==void 0?this._selectedTemp:this.state.selected}static getDerivedStateFromProps(e,s){return e.togglable&&e.selected!==void 0&&e.selected!==s.selected?{selected:e.selected}:null}render(){const{children:e,togglable:s,icon:n,iconClass:r,svgIcon:a,imageUrl:p,imageAlt:b,className:v,startIcon:g,endIcon:h,onClick:S,size:C=i.defaultProps.size,rounded:N=i.defaultProps.rounded,fillMode:k=i.defaultProps.fillMode,themeColor:y=i.defaultProps.themeColor,...P}=this.props,O=a!==void 0||n!==void 0||r!==void 0||p!==void 0,T=e!==void 0,d=this.context&&this.context.uButton,E=B({name:n,svgIcon:a,iconClass:r,imageUrl:p,imageAlt:b,buttonClasses:d}),f=m=>c.cloneElement(m,{className:t.classNames(t.uButton.icon({c:d}))});return c.createElement("button",{ref:m=>this._element=m,"aria-pressed":s?this.state.selected:void 0,...P,onClick:this.handleClick,className:t.classNames(t.uButton.wrapper({c:d,isRtl:this.props.dir==="rtl",selected:this.state.selected,disabled:this.props.disabled,size:C,fillMode:k,rounded:N,themeColor:y,iconButton:!T&&O}),v)},g&&f(g),E,e&&c.createElement("span",{className:t.classNames(t.uButton.text({c:d}))},e),h&&f(h))}toggleIfApplicable(){if(this.props.togglable&&this.props.selected===void 0){const e=!this.state.selected;this._selectedTemp=e,this.setState({selected:e},()=>this._selectedTemp=void 0)}}};i.propTypes={children:l.node,selected:l.bool,togglable:l.bool,icon:l.string,svgIcon:t.svgIconPropType,iconClass:l.string,imageUrl:l.string,imageAlt:l.string,size:l.oneOf([null,"small","medium","large"]),rounded:l.oneOf([null,"small","medium","large","full"]),fillMode:l.oneOf([null,"flat","link","outline","solid","clear"]),themeColor:l.oneOf([null,"base","primary","secondary","tertiary","info","success","warning","error","dark","light","inverse"])},i.defaultProps={togglable:!1,size:"medium",rounded:"medium",fillMode:"solid",themeColor:"base"};let u=i;u.contextType=t.UnstyledContext;exports.Button=u;
